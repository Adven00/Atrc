CMAKE_MINIMUM_REQUIRED(VERSION 3.13)

IF(DEFINED ENV{VCPKG_ROOT} AND NOT DEFINED CMAKE_TOOLCHAIN_FILE)
  SET(CMAKE_TOOLCHAIN_FILE $ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake CACHE STRING "")
ENDIF()

PROJECT(Atrc)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Source/Lib/Utils/Src/)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/Source/)

SET(CMAKE_CXX_STANDARD 17)

IF(MSVC)
    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(glfw3 CONFIG REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)

FILE(GLOB_RECURSE LIB_SRC "Source/Atrc/Lib/*.cpp" "Source/Atrc/Lib/*.h")
ADD_LIBRARY(Lib STATIC ${LIB_SRC})
FOREACH(_SRC IN ITEMS ${LIB_SRC})
    GET_FILENAME_COMPONENT(LIB_SRC "${_SRC}" PATH)
    STRING(REPLACE "${CMAKE_SOURCE_DIR}/Source/Atrc/Lib" "" _GRP_PATH "${LIB_SRC}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

FILE(GLOB_RECURSE MGR_SRC "Source/Atrc/Mgr/*.cpp" "Source/Atrc/Mgr/*.h")
ADD_LIBRARY(Mgr STATIC ${MGR_SRC})
FOREACH(_SRC IN ITEMS ${MGR_SRC})
    GET_FILENAME_COMPONENT(MGR_SRC "${_SRC}" PATH)
    STRING(REPLACE "${CMAKE_SOURCE_DIR}/Source/Atrc/Mgr" "" _GRP_PATH "${MGR_SRC}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

FILE(GLOB_RECURSE IMGUI_SRC "Source/Lib/imgui/*.cpp" "Source/Lib/imgui/*.h")
ADD_LIBRARY(ImGui STATIC ${IMGUI_SRC})
TARGET_INCLUDE_DIRECTORIES(ImGui PRIVATE ${GLEW_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(ImGui PRIVATE ${glfw3_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(ImGui PRIVATE ${OPENGL_INCLUDE_DIRS})

FILE(GLOB_RECURSE AGZUTILS_SRC "Source/Lib/AGZUtils/*.cpp" "Source/Lib/Utils/Src/*.h" "Source/Lib/Utils/Src/*.cpp")
ADD_LIBRARY(AGZUtils STATIC ${AGZUTILS_SRC})
FOREACH(_SRC IN ITEMS ${AGZUTILS_SRC})
    GET_FILENAME_COMPONENT(AGZUTILS_SRC "${_SRC}" PATH)
    STRING(REPLACE "${CMAKE_SOURCE_DIR}/Source/Lib/Utils/Src/AGZUtils" "Header" _GRP_PATH_0 "${AGZUTILS_SRC}")
    STRING(REPLACE "${CMAKE_SOURCE_DIR}/Source/Lib/AGZUtils" "Impl" _GRP_PATH "${_GRP_PATH_0}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()
TARGET_INCLUDE_DIRECTORIES(AGZUtils PRIVATE ${GLEW_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(AGZUtils PRIVATE ${glfw3_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(AGZUtils PRIVATE ${OPENGL_INCLUDE_DIRS})

FILE(GLOB_RECURSE LAUNCHER_SRC "Source/Atrc/Launcher/*.cpp" "Source/Atrc/Launcher/*.h")
ADD_EXECUTABLE(Launcher ${LAUNCHER_SRC})
TARGET_LINK_LIBRARIES(Launcher Lib Mgr AGZUtils)

FILE(GLOB_RECURSE EDITOR_SRC "Source/Atrc/Editor/*.cpp" "Source/Atrc/Editor/*.h")
ADD_EXECUTABLE(Editor ${EDITOR_SRC})
FOREACH(_SRC IN ITEMS ${EDITOR_SRC})
    GET_FILENAME_COMPONENT(EDITOR_SRC "${_SRC}" PATH)
    STRING(REPLACE "${CMAKE_SOURCE_DIR}/Source/Atrc/Editor" "" _GRP_PATH "${EDITOR_SRC}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

TARGET_INCLUDE_DIRECTORIES(Editor PRIVATE ${GLEW_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(Editor PRIVATE ${glfw3_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(Editor PRIVATE ${OPENGL_INCLUDE_DIRS})

TARGET_LINK_LIBRARIES(Editor PRIVATE ImGui)
TARGET_LINK_LIBRARIES(Editor PRIVATE GLEW::GLEW)
TARGET_LINK_LIBRARIES(Editor PRIVATE glfw)
TARGET_LINK_LIBRARIES(Editor PRIVATE ${OPENGL_LIBRARIES})
TARGET_LINK_LIBRARIES(Editor PRIVATE Lib)
TARGET_LINK_LIBRARIES(Editor PRIVATE Mgr)
TARGET_LINK_LIBRARIES(Editor PRIVATE AGZUtils)
