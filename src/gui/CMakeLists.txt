CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT(GUI)

FILE(GLOB_RECURSE TARGET_SRC
		"${PROJECT_SOURCE_DIR}/src/*.cpp"
		"${PROJECT_SOURCE_DIR}/include/*.h")
ADD_EXECUTABLE(GUI ${TARGET_SRC})

FOREACH(_SRC IN ITEMS ${TARGET_SRC})
    GET_FILENAME_COMPONENT(TARGET_SRC "${_SRC}" PATH)
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/include/agz/gui" "include" _GRP_PATH "${TARGET_SRC}")
    STRING(REPLACE "${PROJECT_SOURCE_DIR}/src" "src" _GRP_PATH "${_GRP_PATH}")
    STRING(REPLACE "/" "\\" _GRP_PATH "${_GRP_PATH}")
    SOURCE_GROUP("${_GRP_PATH}" FILES "${_SRC}")
ENDFOREACH()

SET_PROPERTY(TARGET GUI PROPERTY CXX_STANDARD 17)
SET_PROPERTY(TARGET GUI PROPERTY CXX_STANDARD_REQUIRED ON)

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
	IF(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.0)
		SET(LINKER_FLAGS "-lc++fs -ldl -pthread")
	ELSE()
		SET(LINKER_FLAG "-lstdc++fs -ldl -pthread")
	ENDIF()
ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    SET(LINKER_FLAGS "-lstdc++fs -ldl -pthread")
ENDIF()

IF(MSVC)
	TARGET_COMPILE_DEFINITIONS(GUI PUBLIC _CRT_SECURE_NO_WARNINGS)
ENDIF()

TARGET_INCLUDE_DIRECTORIES(GUI PRIVATE ${MISC_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(GUI PRIVATE "${PROJECT_SOURCE_DIR}/include/")
TARGET_INCLUDE_DIRECTORIES(GUI PRIVATE ${GLEW_INCLUDE_DIRS})

TARGET_LINK_LIBRARIES(GUI Tracer Factory AGZUtils Qt5::Widgets ${LINKER_FLAGS})
