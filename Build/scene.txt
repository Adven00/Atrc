# Renderer
renderer = {
    type        = PathTracingRenderer;
    workerCount = 11;
    spp         = 1;
    integrator  = {
        type     = PathTracer;
        maxDepth = 50;
    };
};

# Output filename
outputFilename = "./Build/Output.png";

# Progress reporter
reporter = { type = Default; };

# Camera
camera = {
    type = Pinhole;
    film = {
        width  = 640;
        height = 480;
    };
    sensor = {
        width    = 2.0;
        distance = 1;
    };
    pinholePos = (-7, 0, 0);
    lookAt     = (0, 0, 1.5);
    up         = (0, 0, 1);
};

# Entity list
entities = (
{   # ground
    type = GeometricEntity;
    geometry = {
        type      = Sphere;
        radius    = 200;
        transform = (Translate(0, 0, -201));
    };
    material = {
        type   = DiffuseMaterial;
        albedo = (0.5);
    };
},
{   # left sphere
    type = GeometricEntity;
    geometry = {
        type      = Sphere;
        radius    = 1.0;
        transform = (Translate(0, 2, 0));
    };
    material = {
        type      = Metal;
        rc        = (0.5);
        etaI      = (1);
        etaT      = (0.1);
        k         = (0.1);
        roughness = 0.003;
    };
},
{   # centre model
    type = GeometricEntity;
    geometry = {
        type = TriangleBVH;
        path = "./Assets/Statue_Bressant_1M_Poly.obj";
        transform = (Translate(0.0, 0.02, -0.945), RotateZ(Deg(-90)), Scale(0.0050));
    };
    material = {
        type = Metal;
        rc = (0.9, 0.4, 0.2);
        etaI = 1;
        etaT = 0.1;
        k = 0.2;
        roughness = 0.02;
    };
},
{   # right cube
    type = GeometricEntity;
    geometry = {
        type = Cube;
        sidelen = 1.4;
        transform = (Translate(0, -2, 0.123), Rotate((1.0, 1.1, 1.2), Deg(47)));
    };
    material = {
        type = TextureScaler;
        sampler = Linear;
        path = "./Assets/CubeTex.png";
        internal = {
            type = DiffuseMaterial;
            albedo = (0.2, 0.4, 0.8);
        };
    };
}
);

# Light list
lights = (
{
    type = SphereEnvironmentLight;
    tex = "./Assets/PineForest.png";
}
);

postProcessors = (
{ type = HorizontalFlipper; },
{ type = VerticalFlipper; },
{ type = ACESFilm; },
#{ type = GammaCorrection; gamma = 1.0; }
);
