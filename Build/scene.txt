# Scene description file for Atrc Launcher

film = {
    size = (1024, 1024);
    filter = {
        type = Box;
        sidelen = 1;
    };
};

sampler = {
    type = Native;
    spp = 10000;
};

camera = {
    type = Pinhole;
    sensorWidth = 1;
    sensorDistance = 1.8;
    pos = (-7, 0, 0.4);
    lookAt = (0, 0, 0.4);
    up = (0, 0, 1);
};

renderer = {
    type = PathTracing;
    integrator = {
        type = Vol;
        minDepth = 10;
        maxDepth = 200;
        contProb = 1;
        sampleAllLights = True;
        lightInMedium = False;
    };
    workerCount = 11;
    taskGridSize = 16;
};

outputFilename = "./Output.png";

reporter = { type = Default; };

groundMat = {
    type = IdealDiffuse;
    albedo = {
        type = Image;
        filename = "./Asset/ground.jpeg";
    };
    ###type = TSMetal;
    rc = {
        type = Image;
        filename = "./Asset/ground.jpeg";
    };
    roughness = {
        type = Constant1;
        texel = 0.01;
    };
    fresnel = {
        type = Conductor;
        etaI = (1);
        etaT = (0.3);
        k = (0.3);
    };###
};

crabMat = {
    ###type = TSMetal;
    rc = {
        type = Constant;
        texel = (0.8);
    };
    roughness = {
        type = Constant1;
        texel = 0.01;
    };
    fresnel = {
        type = Conductor;
        etaI = (1);
        etaT = (0.1);
        k = (0.1);
    };###
    type = IdealSpecular;
    rc = {
        type = Constant;
        texel = (0.98);
    };
    fresnel = {
        type = Dielectric;
        etaI = 1;
        etaT = 1.55;
    };
};

entities = (
{
    type = GeometricDiffuse;
    geometry = {
        type = Sphere;
        radius = 2;
        transform = (Translate(-2, 0, 6));
    };
    radiance = (15);
},
{
    type = Geometric;
    geometry = {
        type = Triangle;
        A = (-1.5, -1.5, 0);
        B = (-1.5, 1.5, 0);
        C = (1.5, 1.5, 0);
        tA = (0, 0); tB = (0, 1); tC = (1, 1);
        transform = (Translate(0, 0, -1));
    };
    material = groundMat;
},
{
    type = Geometric;
    geometry = {
        type = Triangle;
        A = (-1.5, -1.5, 0);
        B = (1.5, 1.5, 0);
        C = (1.5, -1.5, 0);
        tA = (0, 0); tB = (1, 1); tC = (1, 0);
        transform = (Translate(0, 0, -1));
    };
    material = groundMat;
},
{
    type = Geometric;
    geometry = {
        type = TriangleBVH;
        filename = "./Asset/Le_Transi_De_Rene_De_Chalon.obj";
        transform = (
            Translate(0, 0.05, -1.03),
            RotateZ(Deg(-100)),
            RotateX(Deg(90)),
            Translate(0, 0, 0),
            Scale(0.06),
        );
    };
    material = {
        type = TSMetal;
        rc = {
            type = Constant;
            texel = (0.7, 0.3, 0.2);
        };
        roughness = {
            type = Constant1;
            texel = 0.05;
        };
        fresnel = {
            type = Conductor;
            etaI = (1);
            etaT = (0.1);
            k = (0.2);
        };
    };
},
{
    type = Geometric;
    geometry = {
        type = TriangleBVH;
        filename = "./Asset/Dark_Finger_Reef_Crab.obj";
        transform = (
            Translate(-1, 0.45, -0.9),
            RotateZ(Deg(-70)),
            Scale(0.004),
        );
    };
    material = crabMat;
},
{
    type = Geometric;
    geometry = {
        type = TriangleBVH;
        filename = "./Asset/Dark_Finger_Reef_Crab.obj";
        transform = (
            Translate(-1, -0.05, -0.96),
            RotateZ(Deg(-120)),
            Scale(0.0015),
        );
    };
    material = crabMat;
},
{
    type = Geometric;
    geometry = {
        type = TriangleBVH;
        filename = "./Asset/Status.obj";
        transform = (
            Translate(0, 0.85, -1),
            RotateZ(Deg(-160)),
            RotateY(Deg(90)),
            Scale(0.003),
        );
    };
    material = {
        type = IdealSpecular;
        rc = {
            type = Constant;
            texel = (0.6, 0.95, 0.75);
        };
        fresnel = {
            type = Dielectric;
            etaI = 1;
            etaT = 1.6;
        };
    };
    medium = {
        in = {
            type = Homogeneous;
            sigmaA = (4);
            sigmaS = (10);
            le = (0);
            g = 0.3;
        };
    };
},
{
    type = Geometric;
    geometry = {
        type = TriangleBVH;
        filename = "./Asset/happy_vrip.obj";
        transform = (
            Translate(-0.4, -0.7, -0.26),
            RotateZ(Deg(250)),
            RotateX(Deg(90)),
            Scale(0.025),
        );
    };
    material = {
        type = IdealDiffuse;
        albedo = {
            type = Constant;
            texel = (0.3, 0.5, 0.6);  
        };
    };
}
);

blackTexture = {
    type = Constant1;
    texel = 0;
};

lights = (
###{
    type = Sky;
    top = b(200, 250, 255);
    bottom = (1);
}###
);

postProcessors = (
    { type = FlipImage; }
);
