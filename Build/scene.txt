# Scene description file for Atrc Launcher

film = {
    size = (600, 900);
    filter = {
        type = Box;
        sidelen = 1;
    };
};

sampler = {
    type = Native;
    seed = 42;
    spp = 4000;
};

camera = {
    type = Pinhole;
    sensorWidth = 1;
    sensorDistance = 1;
    pos = (-7, 0, 1.5);
    lookAt = (0, 0, 1);
    up = (0, 0, 1);
};

renderer = {
    type = PathTracing;
    integrator = {
        type = NativePathTracing;
        minDepth = 10;
        maxDepth = 20;
        contProb = 0.9;
    };
    workerCount = -1;
    taskGridSize = 16;
};

outputFilename = "./Output.png";

reporter = { type = Default; };

mat = {
    type = IdealDiffuse;
    albedo = {
        type = Constant;
        texel = (0.7);
    };
};

entities = (
{
    type = Geometric;
    geometry = {
        type = Sphere;
        radius = 200;
        transform = (Translate(0, 0, -201));
    };
    material = mat;
},
###{
    type = Geometric;
    geometry = {
        type = Sphere;
        radius = 1;
        transform = (Translate(0, 0, 0));
    };
    material = {
        type = ONMatte;
        albedo = {
            type = Constant1;
            texel = 0.7;
        };
        sigma = {
            type = Constant1;
            texel = 0.2;
        };
    };
}###
{
    type = Geometric;
    geometry = {
        type = TriangleBVH;
        filename = "./Asset/10.obj";
        transform = (Translate(-2, 0, -1), RotateZ(Deg(190)), RotateX(Deg(90)), Scale(0.06));
    };
    material = {
        type = IdealDiffuse;
        albedo = {
            type = Image;
            filename = "./Asset/xxxxc.jpg";
        };
    };
}
);

blackTexture = {
    type = Constant1;
    texel = 0;
};

lights = (
###{
    type = Sky;
    top = (1);
    bottom = (1);
}
{
    type = CubeEnvironment;
    posX = blackTexture;
    posY = {
        type = Constant1;
        texel = 2;
    };
    posZ = blackTexture;
    negX = blackTexture;
    negY = blackTexture;
    negZ = blackTexture;
}###
{
    type = CubeEnvironment;
    posX = {
        type = Image;
        filename = "./Asset/PineForest/front.jpg";
    };
    posY = {
        type = Image;
        filename = "./Asset/PineForest/left.jpg";
    };
    posZ = {
        type = Image;
        filename = "./Asset/PineForest/up.jpg";
    };
    negX = {
        type = Image;
        filename = "./Asset/PineForest/back.jpg";
    };
    negY = {
        type = Image;
        filename = "./Asset/PineForest/right.jpg";
    };
    negZ = {
        type = Image;
        filename = "./Asset/PineForest/down.jpg";
    };
}
);

postProcessors = (
    { type = FlipImage; }
);
