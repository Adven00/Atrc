# Renderer
renderer = {
    type        = PathTracingRenderer;
    workerCount = 6;
    spp         = 300;
    gridSize    = 40;
    integrator  = {
        type     = PathTracer;
        maxDepth = 50;
    };
};

# Output filename
outputFilename = "./Build/Output.png";

# Progress reporter
reporter = { type = Default; };

# Camera
camera = {
    type = ThinLens;
    film = {
        width  = 640;
        height = 480;
    };
    sensor = {
        width    = 2;
        distance = 1;
    };
    lens = {
        radius = 0;
        focalPlaneDistance = 7;
    };
    lensPos = (-7, 0, 0);
    lookAt  = (0, 0, 0);
    up      = (0, 0, 1);
};

# Entity list
entities = (
{
    type = GeometricEntity;
    geometry = {
        type = Triangle;
        A  = (-4, -4, 0); B = (-4, 4, 0); C = (4, 4, 0);
        tA = (1, 1); tB = (0, 1); tC = (0, 0);
        transform = (Translate(0, 0, 0), RotateZ(Deg(0)), RotateY(Deg(-90)));
    };
    material = {
        type = DiffuseMaterial;
        albedo = (0.5);
        normalMap = {
            type = Image;
            filename = "./Assets/ExampleNormalMap.png";
            sampler = Nearest;
            wrapper = Clamp;
        };
    };
},
{
    type = GeometricEntity;
    geometry = {
        type = Triangle;
        A  = (-4, -4, 0); B = (4, 4, 0); C = (4, -4, 0);
        tA = (1, 1); tB = (0, 0); tC = (1, 0);
        transform = (Translate(0, 0, 0), RotateZ(Deg(0)), RotateY(Deg(-90)));
    };
    material = {
        type = DiffuseMaterial;
        albedo = (0.5);
        normalMap = {
            type = Image;
            filename = "./Assets/ExampleNormalMap.png";
            sampler = Nearest;
            wrapper = Clamp;
        };
    };
},
#{   # left sphere
#    type = GeometricEntity;
#    geometry = {
#        type      = Sphere;
#        radius    = 1.0;
#        transform = (Translate(0, 2, 0));
#    };
#    material = {
#        type      = Metal;
#        rc        = (0.5);
#        etaI      = (1);
#        etaT      = (0.1);
#        k         = (0.1);
#        roughness = 0.003;
#    };
#},
#{   # centre model
#    type = GeometricEntity;
#    geometry = {
#        type = TriangleBVH;
#        path = "./Assets/Statue_Bressant_1M_Poly.obj";
#        transform = (Translate(0.0, 0.02, -0.945), RotateZ(Deg(-90)), Scale(0.0050));
#    };
#    material = {
#        type = Metal;
#        rc = (0.9, 0.4, 0.2);
#        etaI = 1;
#        etaT = 0.1;
#        k = 0.2;
#        roughness = 0.02;
#    };
#},
#{   # right cube
#    type = GeometricEntity;
#    geometry = {
#        type = Cube;
#        sidelen = 1.4;
#        transform = (Translate(0, -2, 0.123), Rotate((1.0, 1.1, 1.2), Deg(47)));
#    };
#    material = {
#        type = TextureScaler;
#        texture = {
#            type = Image;
#            filename = "./Assets/CubeTex.png";
#            sampler = Linear;
#            wrapper = Clamp;
#        };
#        internal = {
#            type = DiffuseMaterial;
#            albedo = (0.2, 0.4, 0.8);
#        };
#    };
#}
);

# Light list
lights = (
#{
#    type = CubeEnvironmentLight;
#    posX = {
#        type = Image;
#        filename = "./Assets/PineForest/front.jpg";
#        sampler = Linear;
#        wrapper = Clamp;
#    };
#    posY = {
#        type = Image;
#        filename = "./Assets/PineForest/left.jpg";
#        sampler = Linear;
#        wrapper = Clamp;
#    };
#    posZ = {
#        type = Image;
#        filename = "./Assets/PineForest/up.jpg";
#        sampler = Linear;
#        wrapper = Clamp;
#    };
#    negX = {
#        type = Image;
#        filename = "./Assets/PineForest/back.jpg";
#        sampler = Linear;
#        wrapper = Clamp;
#    };
#    negY = {
#        type = Image;
#        filename = "./Assets/PineForest/right.jpg";
#        sampler = Linear;
#        wrapper = Clamp;
#    };
#    negZ = {
#        type = Image;
#        filename = "./Assets/PineForest/down.jpg";
#        sampler = Linear;
#        wrapper = Clamp;
#    };
#}
{
    type = SphereEnvironmentLight;
    tex = {
        type = Image;
        filename = "./Assets/RightLight.png";
        sampler = Linear;
        wrapper = Clamp;
    };
    transform = (RotateZ(Deg(-150)));
}
);

postProcessors = (
    { type = HorizontalFlipper; },
    { type = VerticalFlipper; },
    #{ type = ACESFilm; },
    #{ type = GammaCorrection; gamma = 0.6; }
);
