# Integrator
integrator = { type = VolumetricPathTracer; maxDepth = 10; };

# Renderer
renderer = { type = ParallelRenderer; workerCount = 6; };

# SubareaRenderer
subareaRenderer = { type = JitteredSubareaRenderer; spp = 400; };

# Image properties
output = { width = 640; height = 480; };

# Camera
camera = {
    eye  = (-7, 0, 0);
    dst  = (0, 0, 0);
    up   = (0, 0, 1);
    FOVz = (Deg, 40);
};

# Entity list
entities = (
{   # ground
    type = GeometricEntity;
    geometry = {
        type      = Sphere;
        radius    = 200;
        transform = ((Translate, 0, 0, -201));
    };
    material = {
        type   = DiffuseMaterial;
        albedo = (0.5);
    };
},
#{   # left sphere
#    type = GeometricEntity;
#    geometry = {
#        type      = Sphere;
#        radius    = 0.7;
#        transform = ((Translate, 0, 2, -0.3));
#    };
#    material = {
#        type      = Metal;
#        rc        = (0.5);
#        etaI      = (1);
#        etaT      = (0.1);
#        k         = (0.1);
#        roughness = 0.003;
#    };
#},
{   # centre model
    type = GeometricEntity;
    geometry = {
        type = TriangleBVH;
        path = "./Assets/Statue_Bressant_1M_Poly.obj";
        transform = ((Translate, 0.0, 0.02, -0.95), (RotateZ, Deg, -90), (Scale, 0.0050));
    };
    material = {
        type      = FresnelSpecular;
        rc        = (0.9, 0.4, 0.2);
        fresnel = {
            type = FresnelDielectric;
            etaI = 1.0;
            etaT = 1.6;
        };
    };
    mediumInterface = {
        in = {
            type = Homogeneous;
            sigmaA = (7.0);
            sigmaS = (0.3);
            le = (0.0);
            g = 0.6;
        };
    };
},
{   # right cube
    type = GeometricEntity;
    geometry = {
        type = Cube;
        sidelen = 1.4;
        transform = ((Translate, 0, -2, 0.123), (Rotate, 1.0, 1.1, 1.2, Deg, 47));
    };
    material = {
        type = TextureScaler;
        sampler = Linear;
        path = "./Assets/CubeTex.png";
        internal = {
            type = DiffuseMaterial;
            albedo = (0.2, 0.4, 0.8);
        };
    };
});

# Light list
lights = ({
    type   = SkyLight;
    top    = (0.4, 0.7, 0.9);
    bottom = (1.0);
});
